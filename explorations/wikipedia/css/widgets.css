/* widgets */

.container-toggle-user_settings:not(#page_portal-testbed *){
    z-index: 999;
    /* FIXME: on Firefox the filter property on :root makes
     * "position: fixed" effectively into "position: absolute"
     */
    position: sticky;
    left: 0;
    top: 0;
}


    /* IMPORTANT
     * justificationController detects the changed parameters (family, size...)
     * that influence justification and sets different css custom parameters
     * to the ".runion-justification-host" element.
     */
.thumb {
    --font-family: RobotoFlex;
    --grad-animation-name: RobotoFlex-grad-by-font-size;
    --font-xtra: 468; /*FIXME: consider full spec, including esp. --font-size (pt)*/
    /*
     *  9 pt if default is 12 pt, same as in wikipedia page UI:
     * .vector-menu-portal .body li, .vector-menu-portal .vector-menu-content li
     */
    --font-size-rem: 3/4;
}

button.toggle-user_settings:not(#page_portal-testbed *) {
    position: absolute;
}
button.toggle-user_settings {
    border: 1px solid lightgray;
    background: #ffffff82;
    border-radius: .25em;
}

.widgets_container, .widgets_container h3 {

    --font-family: RobotoFlex;
    --grad-animation-name: RobotoFlex-grad-by-font-size;
    --font-xtra: 468; /*FIXME: consider full spec, including esp. --font-size (pt)*/

}

.widgets_container {
    max-width: 27rem;
    background: #fffffff4;
    padding: .5em 1em;
}

.page_content-item .widgets_container{
    z-index: 998;
    position: absolute;
}

.widgets_container > * {
    margin: .5em 0;
    display: block;
}
.widgets_container label {
    margin-bottom: .3em;
    display: inline-block;
}

.widgets_container button.close{
    margin-left: auto;
    --font-weight: 600;
}

.widgets_container legend {
    --font-weight: 550;
}

.widgets_container h3 {
    margin: .5em 0;
    --font-weight: 550;

}

.widgets_container legend,
.widgets_container h3 {
    --font-size-rem: 1;
}


label.user_preferences-fine_user_zoom::after {
    content: attr(data-value) 'pt';
}

.widgets_container label.portal_augmentation-justification_option{
    display: block;
    margin-left: 1.5em;
}

label.user_preferences-user_distance::after {
    content: attr(data-value) 'cm';
}

.widgets_container input[type="range"] {
    vertical-align: middle;
    width: 9em;
}

.widgets_container input.article_url-text_input {
    display: block;
    width: 100%;
    box-sizing: border-box;
    margin-block-end: .5em;
}

:fullscreen::backdrop {
    background: darkgrey;
    --background: darkgrey;
}

#testbed-subject {
    width: 1024px;
    height: 768px;
    display: block;
    margin: auto;
}

.portal_properties-set_orientation{
  visibility: hidden;
  position: absolute;
  cursor: pointer;
}

.portal_properties-set_orientation ~ span:after {
  content: " Landscape";
}

.portal_properties-set_orientation ~ span:before {
  display: inline-block;
  content: " ";
  background: lightgrey;
  border: 1px solid black;
  border-radius: .1em;
  vertical-align:middle;
  width: 1em;
  height: .5em;
}

.portal_properties-set_orientation:checked ~ span:after {
  content: " Portrait";
}
.portal_properties-set_orientation:checked ~ span:before {
  width: .5em;
  height: 1em;
}


.portal_augmentation-run_justification_checkbox > input,
.portal_augmentation-switch_grade_checkbox > input{
    visibility: hidden;
    position: absolute;
    cursor: pointer;
}

.portal_augmentation-run_justification_checkbox > input ~ span:after,
.portal_augmentation-switch_grade_checkbox > input ~ span:after {
    display: inline-block;
    background: #f5f4f3;
    border: 0.0625em solid #edebe9;
    border: 0.0625em outset ThreeDLightShadow;
    padding: 0.4em;
    border-radius: .2em;
}

.portal_augmentation-run_justification_checkbox > input ~ span:hover:after,
.portal_augmentation-switch_grade_checkbox > input ~ span:hover:after {
    background: #f9f8f7;
}

.portal_augmentation-switch_grade_checkbox > input ~ span:before {
  content: "is off ";
}

.portal_augmentation-switch_grade_checkbox > input:checked ~ span:before {
  content: "is on ";
}

.portal_augmentation-switch_grade_checkbox > input ~ span:after {
  content: "turn on";
}

.portal_augmentation-switch_grade_checkbox > input:checked ~ span:after {
  content: "turn off";
}

label.portal_augmentation-amplify_grade::after {
    content: "×" attr(data-value);
}

.portal_augmentation-run_justification_checkbox > input ~ span:after{
    content: "▶ run";
}
.portal_augmentation-run_justification_checkbox > input:checked ~ span:after{
    content: "▮▮ pause";
}



:root{
    /* The crosshair is black with a white outline for contrast.
     * doing it this way so I can use the same as an toolbar icon and
     * as actual cursor.
     *
     * Note: using \ to escape newlines works well in Chrome and Firefox
     * but it destroys syntax highlighting in my editor. Actually, having
     * a full stop at the end of this comment and some magic(?) number
     * of characters in the last line restores syntax highlighting again.
     */
    ---cursor-crosshair-url: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='20' height='20'>\
                <g id='crosshair_cursor' fill='transparent'>\
                      <circle cx='10' cy='10' r='7' />\
                    <line x1='10' y1='0' x2='10' y2='20' />\
                    <line x1='0' y1='10' x2='20' y2='10' />\
                </g>\
                <use href='%23crosshair_cursor' stroke='white' stroke-width='5' opacity='.7' />\
                <use href='%23crosshair_cursor' stroke='black' stroke-width='2' />\
            </svg>");
}

.inspector-toggle_selection_tool > input {
  visibility: hidden;
  position: absolute;
  cursor: pointer;
}

.inspector-toggle_selection_tool > input ~ span{
    background: #f5f4f3;
    border: 0.0625em solid #edebe9;
    border: 0.0625em outset ThreeDLightShadow;
    padding: 0.4em;
    border-radius: .2em;
}

.inspector-toggle_selection_tool > input ~ span:after {
  content: " inactive";
}

.inspector-toggle_selection_tool > input ~ span:before {
  display: inline-block;
  content: "";
  background: no-repeat var(---cursor-crosshair-url);
  background-size: contain;
  vertical-align:middle;
  width: 1em;
  height: 1em;
  opacity: .3;
}
.inspector-toggle_selection_tool > input:checked ~ span:before {
    opacity: 1;
}

.inspector-toggle_selection_tool > input:checked ~ span:after {
  content: " active";
}
.inspector-toggle_selection_tool > input:checked ~ * {
  background: lime;
}

.inspector-report_container{
    margin: 0;
    padding: 0 .3em;
    list-style: none;
    background: #ccc;
}

.inspector-report_container > li {
    margin: 0;
    padding: 0;
}

.inspector-report_heading{
    display: block;
    margin-top: .5em;
    text-decoration: underline;
    --font-size-rem: 1.1;
    --font-weight: 350;

}
.inspector-report_data-line {
    display: block;
}
.inspector-report_data-label,
.inspector-report_data-line dt {
    --font-xtra: 350;
    --font-weight: 350;
}
.inspector-report_data-line dl{
    margin: 0 0 0 1em;
}
.inspector-report_data-line dt, .inspector-report_data-line dd{
    display: inline;
    margin: 0;
}

.inspector-report_data-line dt::after {
    content: ': ';
}

.inspector-report_data-line dd::after {
    display: block;
    content: '';
}

.varla_varfo-font_spec_inspector,
.inspector-toggle_selection_tool > input:checked ~ * {
    cursor: var(---cursor-crosshair-url) 10 10, crosshair;
}

.varla_varfo-font_spec_inspector :not(.insert_user_settings):not(.insert_user_settings *):hover{
    box-shadow: 0 0 10px deeppink;
}

.varla_varfo-font_spec_inspector .varla_varfo-font_spec_inspector-beacon {
    /* looks like a carret.*/
    outline: solid 2px yellow;
}

.justification-context-block .varla_varfo-font_spec_inspector-beacon {
    /*ignore in jusification
     * F***, doesn't work!
     * Lines always separate at elements, so they can be the innermost
     * element, containing jsut text nodes, but here we want the beacon
     * to become part of the line. :-(
     */
    display: none;
}

